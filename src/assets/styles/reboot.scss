:root {
  @each $u, $u-value in $units {
    --unit-#{$u}: #{$u-value};
  }
  --nav-h: 40px;
  --sidebar-w: 400px;
  --time: 0.4s;
  --scale: 1.05;
  scroll-behavior: smooth;
}
:target {
  scroll-margin-top: calc(var(--nav-h) + var(--unit-3));
}

@each $color-scheme in (light, dark) {
  @media (prefers-color-scheme: $color-scheme) {
    :root {
      @each $colors in (map-get($theme-colors, $color-scheme), map-get($theme-decoration-colors, $color-scheme)) {
        @each $color, $color-value in $colors {
          --#{$color}: #{$color-value};
        }
      }
      @each $color, $color-value in map-get($theme-colors-rgb, $color-scheme) {
        @each $a, $a-value in $alpha {
          --#{$color}-#{$a}: rgba(#{join(($color-value), (), comma)}, #{$a-value});
        }
      }
    }
  }
  [data-theme="#{$color-scheme}"] {
    @each $colors in (map-get($theme-colors, $color-scheme), map-get($theme-decoration-colors, $color-scheme)) {
      @each $color, $color-value in $colors {
        --#{$color}: #{$color-value};
      }
    }
    @each $color, $color-value in map-get($theme-colors-rgb, $color-scheme) {
      @each $a, $a-value in $alpha {
        --#{$color}-#{$a}: rgba(#{join(($color-value), (), comma)}, #{$a-value});
      }
    }
  }
}
*,
::before,
::after {
  box-sizing: border-box;
  font-family: Microsoft JhengHei, sans-serif;
  margin: 0;
  padding: 0;
  transition: background var(--time);
  line-height: 1.5em;
  &::-webkit-scrollbar {
    width: 5px;
    height: 5px;
  }
  &::-webkit-scrollbar-track {
    background: rgba(var(--white), var(--transparent));
  }
  &::-webkit-scrollbar-thumb {
    background: rgb(var(--gray));
    border-radius: 2.5px;
    &:hover {
      background: rgb(var(--blue));
    }
  }
  /* firefox */
  scrollbar-width: thin;
}
html {
  font-size: 16px;
}
body {
  background-color: var(--white);
  color: var(--black);
}
@each $i, $size in (1: xxx-large, 2: xx-large, 3: x-large, 4: large, 5: medium, 6: small) {
  h#{$i} {
    font-size: map-get($text-size, $size);
  }
}
code,
kbd,
pre,
samp {
  font-size: map-get($text-size, small);
}
:not(pre) > code {
  color: var(--code-text);
}
kbd {
  display: inline-block;
  border-radius: 3px;
  box-shadow: 1px 1px 1px var(--main-shadow);
  padding: 0px 4px;
  margin: 2px;
  background: var(--black-80);
}
ul,
ol {
  margin-left: var(--unit-3);
}
li {
  list-style-position: outside;
  margin-top: var(--unit-1);
  margin-bottom: var(--unit-1);
}
table {
  border-collapse: collapse;
  th {
    font-weight: bold;
  }
  th,
  td {
    padding: var(--unit-2);
    border: 1px solid var(--black-80);
  }
}
a {
  color: var(--link);
  &:hover {
    color: var(--link);
  }
  &:visited {
    color: var(--link-visited);
  }
}
